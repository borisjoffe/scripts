#!/bin/bash

# Check that passed in requirements are met.
# Exits with status code 1 if they aren't
# Set DO_NOT_CHECK_REQUIRES_FILE=true to avoid checking commands for performance reasons (e.g. for long lists of dependencies that you don't want to check at runtime or if a command calls requires and runs in a tight loop)

[ "$DO_NOT_CHECK_REQUIRES_FILE" ] && exit 0

set -ueo pipefail

usage.sh "requires-file [one or more files]\ne.g. requires a.txt b.txt" $@ && exit

exit_code=0

for file in "$@"; do
	if [[ ! -f "$file" ]]; then
		echo "requires-file: $file"
		exit_code=1
	fi
done

exit $exit_code
